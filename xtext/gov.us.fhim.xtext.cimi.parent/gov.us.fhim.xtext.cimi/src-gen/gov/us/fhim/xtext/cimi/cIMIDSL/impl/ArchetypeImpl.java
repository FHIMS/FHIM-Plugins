/**
 * generated by Xtext 2.10.0
 */
package gov.us.fhim.xtext.cimi.cIMIDSL.impl;

import gov.us.fhim.xtext.cimi.cIMIDSL.Archetype;
import gov.us.fhim.xtext.cimi.cIMIDSL.CIMIDSLPackage;
import gov.us.fhim.xtext.cimi.cIMIDSL.Description;
import gov.us.fhim.xtext.cimi.cIMIDSL.Languge;
import gov.us.fhim.xtext.cimi.cIMIDSL.Matches;
import gov.us.fhim.xtext.cimi.cIMIDSL.Terminology;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Archetype</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link gov.us.fhim.xtext.cimi.cIMIDSL.impl.ArchetypeImpl#getAdl_version <em>Adl version</em>}</li>
 *   <li>{@link gov.us.fhim.xtext.cimi.cIMIDSL.impl.ArchetypeImpl#getRm_release <em>Rm release</em>}</li>
 *   <li>{@link gov.us.fhim.xtext.cimi.cIMIDSL.impl.ArchetypeImpl#getName <em>Name</em>}</li>
 *   <li>{@link gov.us.fhim.xtext.cimi.cIMIDSL.impl.ArchetypeImpl#getLanguage <em>Language</em>}</li>
 *   <li>{@link gov.us.fhim.xtext.cimi.cIMIDSL.impl.ArchetypeImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link gov.us.fhim.xtext.cimi.cIMIDSL.impl.ArchetypeImpl#getDefinition <em>Definition</em>}</li>
 *   <li>{@link gov.us.fhim.xtext.cimi.cIMIDSL.impl.ArchetypeImpl#getTerminology <em>Terminology</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ArchetypeImpl extends MinimalEObjectImpl.Container implements Archetype
{
  /**
   * The default value of the '{@link #getAdl_version() <em>Adl version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAdl_version()
   * @generated
   * @ordered
   */
  protected static final String ADL_VERSION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAdl_version() <em>Adl version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAdl_version()
   * @generated
   * @ordered
   */
  protected String adl_version = ADL_VERSION_EDEFAULT;

  /**
   * The default value of the '{@link #getRm_release() <em>Rm release</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRm_release()
   * @generated
   * @ordered
   */
  protected static final String RM_RELEASE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRm_release() <em>Rm release</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRm_release()
   * @generated
   * @ordered
   */
  protected String rm_release = RM_RELEASE_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getLanguage() <em>Language</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLanguage()
   * @generated
   * @ordered
   */
  protected Languge language;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected Description description;

  /**
   * The cached value of the '{@link #getDefinition() <em>Definition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefinition()
   * @generated
   * @ordered
   */
  protected Matches definition;

  /**
   * The cached value of the '{@link #getTerminology() <em>Terminology</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTerminology()
   * @generated
   * @ordered
   */
  protected Terminology terminology;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ArchetypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CIMIDSLPackage.Literals.ARCHETYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAdl_version()
  {
    return adl_version;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAdl_version(String newAdl_version)
  {
    String oldAdl_version = adl_version;
    adl_version = newAdl_version;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CIMIDSLPackage.ARCHETYPE__ADL_VERSION, oldAdl_version, adl_version));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRm_release()
  {
    return rm_release;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRm_release(String newRm_release)
  {
    String oldRm_release = rm_release;
    rm_release = newRm_release;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CIMIDSLPackage.ARCHETYPE__RM_RELEASE, oldRm_release, rm_release));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CIMIDSLPackage.ARCHETYPE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Languge getLanguage()
  {
    return language;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLanguage(Languge newLanguage, NotificationChain msgs)
  {
    Languge oldLanguage = language;
    language = newLanguage;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CIMIDSLPackage.ARCHETYPE__LANGUAGE, oldLanguage, newLanguage);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLanguage(Languge newLanguage)
  {
    if (newLanguage != language)
    {
      NotificationChain msgs = null;
      if (language != null)
        msgs = ((InternalEObject)language).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CIMIDSLPackage.ARCHETYPE__LANGUAGE, null, msgs);
      if (newLanguage != null)
        msgs = ((InternalEObject)newLanguage).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CIMIDSLPackage.ARCHETYPE__LANGUAGE, null, msgs);
      msgs = basicSetLanguage(newLanguage, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CIMIDSLPackage.ARCHETYPE__LANGUAGE, newLanguage, newLanguage));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Description getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDescription(Description newDescription, NotificationChain msgs)
  {
    Description oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CIMIDSLPackage.ARCHETYPE__DESCRIPTION, oldDescription, newDescription);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDescription(Description newDescription)
  {
    if (newDescription != description)
    {
      NotificationChain msgs = null;
      if (description != null)
        msgs = ((InternalEObject)description).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CIMIDSLPackage.ARCHETYPE__DESCRIPTION, null, msgs);
      if (newDescription != null)
        msgs = ((InternalEObject)newDescription).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CIMIDSLPackage.ARCHETYPE__DESCRIPTION, null, msgs);
      msgs = basicSetDescription(newDescription, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CIMIDSLPackage.ARCHETYPE__DESCRIPTION, newDescription, newDescription));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Matches getDefinition()
  {
    return definition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDefinition(Matches newDefinition, NotificationChain msgs)
  {
    Matches oldDefinition = definition;
    definition = newDefinition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CIMIDSLPackage.ARCHETYPE__DEFINITION, oldDefinition, newDefinition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDefinition(Matches newDefinition)
  {
    if (newDefinition != definition)
    {
      NotificationChain msgs = null;
      if (definition != null)
        msgs = ((InternalEObject)definition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CIMIDSLPackage.ARCHETYPE__DEFINITION, null, msgs);
      if (newDefinition != null)
        msgs = ((InternalEObject)newDefinition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CIMIDSLPackage.ARCHETYPE__DEFINITION, null, msgs);
      msgs = basicSetDefinition(newDefinition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CIMIDSLPackage.ARCHETYPE__DEFINITION, newDefinition, newDefinition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Terminology getTerminology()
  {
    return terminology;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTerminology(Terminology newTerminology, NotificationChain msgs)
  {
    Terminology oldTerminology = terminology;
    terminology = newTerminology;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CIMIDSLPackage.ARCHETYPE__TERMINOLOGY, oldTerminology, newTerminology);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTerminology(Terminology newTerminology)
  {
    if (newTerminology != terminology)
    {
      NotificationChain msgs = null;
      if (terminology != null)
        msgs = ((InternalEObject)terminology).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CIMIDSLPackage.ARCHETYPE__TERMINOLOGY, null, msgs);
      if (newTerminology != null)
        msgs = ((InternalEObject)newTerminology).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CIMIDSLPackage.ARCHETYPE__TERMINOLOGY, null, msgs);
      msgs = basicSetTerminology(newTerminology, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CIMIDSLPackage.ARCHETYPE__TERMINOLOGY, newTerminology, newTerminology));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CIMIDSLPackage.ARCHETYPE__LANGUAGE:
        return basicSetLanguage(null, msgs);
      case CIMIDSLPackage.ARCHETYPE__DESCRIPTION:
        return basicSetDescription(null, msgs);
      case CIMIDSLPackage.ARCHETYPE__DEFINITION:
        return basicSetDefinition(null, msgs);
      case CIMIDSLPackage.ARCHETYPE__TERMINOLOGY:
        return basicSetTerminology(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CIMIDSLPackage.ARCHETYPE__ADL_VERSION:
        return getAdl_version();
      case CIMIDSLPackage.ARCHETYPE__RM_RELEASE:
        return getRm_release();
      case CIMIDSLPackage.ARCHETYPE__NAME:
        return getName();
      case CIMIDSLPackage.ARCHETYPE__LANGUAGE:
        return getLanguage();
      case CIMIDSLPackage.ARCHETYPE__DESCRIPTION:
        return getDescription();
      case CIMIDSLPackage.ARCHETYPE__DEFINITION:
        return getDefinition();
      case CIMIDSLPackage.ARCHETYPE__TERMINOLOGY:
        return getTerminology();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CIMIDSLPackage.ARCHETYPE__ADL_VERSION:
        setAdl_version((String)newValue);
        return;
      case CIMIDSLPackage.ARCHETYPE__RM_RELEASE:
        setRm_release((String)newValue);
        return;
      case CIMIDSLPackage.ARCHETYPE__NAME:
        setName((String)newValue);
        return;
      case CIMIDSLPackage.ARCHETYPE__LANGUAGE:
        setLanguage((Languge)newValue);
        return;
      case CIMIDSLPackage.ARCHETYPE__DESCRIPTION:
        setDescription((Description)newValue);
        return;
      case CIMIDSLPackage.ARCHETYPE__DEFINITION:
        setDefinition((Matches)newValue);
        return;
      case CIMIDSLPackage.ARCHETYPE__TERMINOLOGY:
        setTerminology((Terminology)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CIMIDSLPackage.ARCHETYPE__ADL_VERSION:
        setAdl_version(ADL_VERSION_EDEFAULT);
        return;
      case CIMIDSLPackage.ARCHETYPE__RM_RELEASE:
        setRm_release(RM_RELEASE_EDEFAULT);
        return;
      case CIMIDSLPackage.ARCHETYPE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case CIMIDSLPackage.ARCHETYPE__LANGUAGE:
        setLanguage((Languge)null);
        return;
      case CIMIDSLPackage.ARCHETYPE__DESCRIPTION:
        setDescription((Description)null);
        return;
      case CIMIDSLPackage.ARCHETYPE__DEFINITION:
        setDefinition((Matches)null);
        return;
      case CIMIDSLPackage.ARCHETYPE__TERMINOLOGY:
        setTerminology((Terminology)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CIMIDSLPackage.ARCHETYPE__ADL_VERSION:
        return ADL_VERSION_EDEFAULT == null ? adl_version != null : !ADL_VERSION_EDEFAULT.equals(adl_version);
      case CIMIDSLPackage.ARCHETYPE__RM_RELEASE:
        return RM_RELEASE_EDEFAULT == null ? rm_release != null : !RM_RELEASE_EDEFAULT.equals(rm_release);
      case CIMIDSLPackage.ARCHETYPE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case CIMIDSLPackage.ARCHETYPE__LANGUAGE:
        return language != null;
      case CIMIDSLPackage.ARCHETYPE__DESCRIPTION:
        return description != null;
      case CIMIDSLPackage.ARCHETYPE__DEFINITION:
        return definition != null;
      case CIMIDSLPackage.ARCHETYPE__TERMINOLOGY:
        return terminology != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (adl_version: ");
    result.append(adl_version);
    result.append(", rm_release: ");
    result.append(rm_release);
    result.append(", name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //ArchetypeImpl
