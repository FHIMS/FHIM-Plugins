/**
 * generated by Xtext 2.10.0
 */
package gov.us.fhim.xtext.cimi.cIMIDSL.impl;

import gov.us.fhim.xtext.cimi.cIMIDSL.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class CIMIDSLFactoryImpl extends EFactoryImpl implements CIMIDSLFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static CIMIDSLFactory init()
  {
    try
    {
      CIMIDSLFactory theCIMIDSLFactory = (CIMIDSLFactory)EPackage.Registry.INSTANCE.getEFactory(CIMIDSLPackage.eNS_URI);
      if (theCIMIDSLFactory != null)
      {
        return theCIMIDSLFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new CIMIDSLFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CIMIDSLFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case CIMIDSLPackage.ARCHETYPE_MODEL: return createArchetypeModel();
      case CIMIDSLPackage.ARCHETYPE: return createArchetype();
      case CIMIDSLPackage.DESCRIPTION: return createDescription();
      case CIMIDSLPackage.DETAILS: return createDetails();
      case CIMIDSLPackage.OTHER_DETAILS: return createOtherDetails();
      case CIMIDSLPackage.ORIGINAL_AUTHOR: return createOriginalAuthor();
      case CIMIDSLPackage.LANGUGE: return createLanguge();
      case CIMIDSLPackage.MATCHES: return createMatches();
      case CIMIDSLPackage.TERMINOLOGY: return createTerminology();
      case CIMIDSLPackage.TERM_DEFINITIONS: return createTermDefinitions();
      case CIMIDSLPackage.TERM_BINDINGS: return createTermBindings();
      case CIMIDSLPackage.TERM_DEFINITION: return createTermDefinition();
      case CIMIDSLPackage.TERM_BINDING: return createTermBinding();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ArchetypeModel createArchetypeModel()
  {
    ArchetypeModelImpl archetypeModel = new ArchetypeModelImpl();
    return archetypeModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Archetype createArchetype()
  {
    ArchetypeImpl archetype = new ArchetypeImpl();
    return archetype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Description createDescription()
  {
    DescriptionImpl description = new DescriptionImpl();
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Details createDetails()
  {
    DetailsImpl details = new DetailsImpl();
    return details;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OtherDetails createOtherDetails()
  {
    OtherDetailsImpl otherDetails = new OtherDetailsImpl();
    return otherDetails;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OriginalAuthor createOriginalAuthor()
  {
    OriginalAuthorImpl originalAuthor = new OriginalAuthorImpl();
    return originalAuthor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Languge createLanguge()
  {
    LangugeImpl languge = new LangugeImpl();
    return languge;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Matches createMatches()
  {
    MatchesImpl matches = new MatchesImpl();
    return matches;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Terminology createTerminology()
  {
    TerminologyImpl terminology = new TerminologyImpl();
    return terminology;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TermDefinitions createTermDefinitions()
  {
    TermDefinitionsImpl termDefinitions = new TermDefinitionsImpl();
    return termDefinitions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TermBindings createTermBindings()
  {
    TermBindingsImpl termBindings = new TermBindingsImpl();
    return termBindings;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TermDefinition createTermDefinition()
  {
    TermDefinitionImpl termDefinition = new TermDefinitionImpl();
    return termDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TermBinding createTermBinding()
  {
    TermBindingImpl termBinding = new TermBindingImpl();
    return termBinding;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CIMIDSLPackage getCIMIDSLPackage()
  {
    return (CIMIDSLPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static CIMIDSLPackage getPackage()
  {
    return CIMIDSLPackage.eINSTANCE;
  }

} //CIMIDSLFactoryImpl
