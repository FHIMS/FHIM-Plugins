/**
 * generated by Xtext 2.10.0
 */
package gov.us.fhim.xtext.cimi.cIMIDSL.impl;

import gov.us.fhim.xtext.cimi.cIMIDSL.CIMIDSLPackage;
import gov.us.fhim.xtext.cimi.cIMIDSL.Matches;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Matches</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link gov.us.fhim.xtext.cimi.cIMIDSL.impl.MatchesImpl#getName <em>Name</em>}</li>
 *   <li>{@link gov.us.fhim.xtext.cimi.cIMIDSL.impl.MatchesImpl#getDefinition <em>Definition</em>}</li>
 *   <li>{@link gov.us.fhim.xtext.cimi.cIMIDSL.impl.MatchesImpl#getSubmatch <em>Submatch</em>}</li>
 *   <li>{@link gov.us.fhim.xtext.cimi.cIMIDSL.impl.MatchesImpl#getValue <em>Value</em>}</li>
 *   <li>{@link gov.us.fhim.xtext.cimi.cIMIDSL.impl.MatchesImpl#getValueDefinition <em>Value Definition</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MatchesImpl extends MinimalEObjectImpl.Container implements Matches
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getDefinition() <em>Definition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefinition()
   * @generated
   * @ordered
   */
  protected static final String DEFINITION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDefinition() <em>Definition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefinition()
   * @generated
   * @ordered
   */
  protected String definition = DEFINITION_EDEFAULT;

  /**
   * The cached value of the '{@link #getSubmatch() <em>Submatch</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubmatch()
   * @generated
   * @ordered
   */
  protected EList<Matches> submatch;

  /**
   * The default value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected static final String VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected String value = VALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getValueDefinition() <em>Value Definition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValueDefinition()
   * @generated
   * @ordered
   */
  protected static final String VALUE_DEFINITION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getValueDefinition() <em>Value Definition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValueDefinition()
   * @generated
   * @ordered
   */
  protected String valueDefinition = VALUE_DEFINITION_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MatchesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CIMIDSLPackage.Literals.MATCHES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CIMIDSLPackage.MATCHES__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDefinition()
  {
    return definition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDefinition(String newDefinition)
  {
    String oldDefinition = definition;
    definition = newDefinition;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CIMIDSLPackage.MATCHES__DEFINITION, oldDefinition, definition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Matches> getSubmatch()
  {
    if (submatch == null)
    {
      submatch = new EObjectContainmentEList<Matches>(Matches.class, this, CIMIDSLPackage.MATCHES__SUBMATCH);
    }
    return submatch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValue(String newValue)
  {
    String oldValue = value;
    value = newValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CIMIDSLPackage.MATCHES__VALUE, oldValue, value));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getValueDefinition()
  {
    return valueDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValueDefinition(String newValueDefinition)
  {
    String oldValueDefinition = valueDefinition;
    valueDefinition = newValueDefinition;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CIMIDSLPackage.MATCHES__VALUE_DEFINITION, oldValueDefinition, valueDefinition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CIMIDSLPackage.MATCHES__SUBMATCH:
        return ((InternalEList<?>)getSubmatch()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CIMIDSLPackage.MATCHES__NAME:
        return getName();
      case CIMIDSLPackage.MATCHES__DEFINITION:
        return getDefinition();
      case CIMIDSLPackage.MATCHES__SUBMATCH:
        return getSubmatch();
      case CIMIDSLPackage.MATCHES__VALUE:
        return getValue();
      case CIMIDSLPackage.MATCHES__VALUE_DEFINITION:
        return getValueDefinition();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CIMIDSLPackage.MATCHES__NAME:
        setName((String)newValue);
        return;
      case CIMIDSLPackage.MATCHES__DEFINITION:
        setDefinition((String)newValue);
        return;
      case CIMIDSLPackage.MATCHES__SUBMATCH:
        getSubmatch().clear();
        getSubmatch().addAll((Collection<? extends Matches>)newValue);
        return;
      case CIMIDSLPackage.MATCHES__VALUE:
        setValue((String)newValue);
        return;
      case CIMIDSLPackage.MATCHES__VALUE_DEFINITION:
        setValueDefinition((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CIMIDSLPackage.MATCHES__NAME:
        setName(NAME_EDEFAULT);
        return;
      case CIMIDSLPackage.MATCHES__DEFINITION:
        setDefinition(DEFINITION_EDEFAULT);
        return;
      case CIMIDSLPackage.MATCHES__SUBMATCH:
        getSubmatch().clear();
        return;
      case CIMIDSLPackage.MATCHES__VALUE:
        setValue(VALUE_EDEFAULT);
        return;
      case CIMIDSLPackage.MATCHES__VALUE_DEFINITION:
        setValueDefinition(VALUE_DEFINITION_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CIMIDSLPackage.MATCHES__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case CIMIDSLPackage.MATCHES__DEFINITION:
        return DEFINITION_EDEFAULT == null ? definition != null : !DEFINITION_EDEFAULT.equals(definition);
      case CIMIDSLPackage.MATCHES__SUBMATCH:
        return submatch != null && !submatch.isEmpty();
      case CIMIDSLPackage.MATCHES__VALUE:
        return VALUE_EDEFAULT == null ? value != null : !VALUE_EDEFAULT.equals(value);
      case CIMIDSLPackage.MATCHES__VALUE_DEFINITION:
        return VALUE_DEFINITION_EDEFAULT == null ? valueDefinition != null : !VALUE_DEFINITION_EDEFAULT.equals(valueDefinition);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", definition: ");
    result.append(definition);
    result.append(", value: ");
    result.append(value);
    result.append(", valueDefinition: ");
    result.append(valueDefinition);
    result.append(')');
    return result.toString();
  }

} //MatchesImpl
