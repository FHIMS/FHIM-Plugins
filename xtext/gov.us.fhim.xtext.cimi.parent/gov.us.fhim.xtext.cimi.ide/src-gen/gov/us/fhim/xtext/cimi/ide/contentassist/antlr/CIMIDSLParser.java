/*
 * generated by Xtext 2.10.0
 */
package gov.us.fhim.xtext.cimi.ide.contentassist.antlr;

import com.google.inject.Inject;
import gov.us.fhim.xtext.cimi.ide.contentassist.antlr.internal.InternalCIMIDSLParser;
import gov.us.fhim.xtext.cimi.services.CIMIDSLGrammarAccess;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class CIMIDSLParser extends AbstractContentAssistParser {

	@Inject
	private CIMIDSLGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalCIMIDSLParser createParser() {
		InternalCIMIDSLParser result = new InternalCIMIDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getMatchesAccess().getAlternatives_4(), "rule__Matches__Alternatives_4");
					put(grammarAccess.getArchetypeAccess().getGroup(), "rule__Archetype__Group__0");
					put(grammarAccess.getDescriptionAccess().getGroup(), "rule__Description__Group__0");
					put(grammarAccess.getDetailsAccess().getGroup(), "rule__Details__Group__0");
					put(grammarAccess.getOtherDetailsAccess().getGroup(), "rule__OtherDetails__Group__0");
					put(grammarAccess.getOriginalAuthorAccess().getGroup(), "rule__OriginalAuthor__Group__0");
					put(grammarAccess.getLangugeAccess().getGroup(), "rule__Languge__Group__0");
					put(grammarAccess.getMatchesAccess().getGroup(), "rule__Matches__Group__0");
					put(grammarAccess.getMatchesAccess().getGroup_1(), "rule__Matches__Group_1__0");
					put(grammarAccess.getMatchesAccess().getGroup_4_1(), "rule__Matches__Group_4_1__0");
					put(grammarAccess.getTerminologyAccess().getGroup(), "rule__Terminology__Group__0");
					put(grammarAccess.getTermDefinitionsAccess().getGroup(), "rule__TermDefinitions__Group__0");
					put(grammarAccess.getTermBindingsAccess().getGroup(), "rule__TermBindings__Group__0");
					put(grammarAccess.getTermDefinitionAccess().getGroup(), "rule__TermDefinition__Group__0");
					put(grammarAccess.getTermBindingAccess().getGroup(), "rule__TermBinding__Group__0");
					put(grammarAccess.getArchetypeModelAccess().getElementsAssignment(), "rule__ArchetypeModel__ElementsAssignment");
					put(grammarAccess.getArchetypeAccess().getAdl_versionAssignment_3(), "rule__Archetype__Adl_versionAssignment_3");
					put(grammarAccess.getArchetypeAccess().getRm_releaseAssignment_6(), "rule__Archetype__Rm_releaseAssignment_6");
					put(grammarAccess.getArchetypeAccess().getNameAssignment_10(), "rule__Archetype__NameAssignment_10");
					put(grammarAccess.getArchetypeAccess().getLanguageAssignment_14(), "rule__Archetype__LanguageAssignment_14");
					put(grammarAccess.getArchetypeAccess().getDescriptionAssignment_18(), "rule__Archetype__DescriptionAssignment_18");
					put(grammarAccess.getArchetypeAccess().getDefinitionAssignment_22(), "rule__Archetype__DefinitionAssignment_22");
					put(grammarAccess.getArchetypeAccess().getTerminologyAssignment_26(), "rule__Archetype__TerminologyAssignment_26");
					put(grammarAccess.getDescriptionAccess().getOriginalAuthorAssignment_4(), "rule__Description__OriginalAuthorAssignment_4");
					put(grammarAccess.getDescriptionAccess().getDetailsAssignment_11(), "rule__Description__DetailsAssignment_11");
					put(grammarAccess.getDetailsAccess().getNameAssignment_1(), "rule__Details__NameAssignment_1");
					put(grammarAccess.getDetailsAccess().getLanguageAssignment_9(), "rule__Details__LanguageAssignment_9");
					put(grammarAccess.getDetailsAccess().getUseAssignment_15(), "rule__Details__UseAssignment_15");
					put(grammarAccess.getDetailsAccess().getCopyrightAssignment_21(), "rule__Details__CopyrightAssignment_21");
					put(grammarAccess.getDetailsAccess().getOther_detailsAssignment_27(), "rule__Details__Other_detailsAssignment_27");
					put(grammarAccess.getOtherDetailsAccess().getLifecycle_stateAssignment_3(), "rule__OtherDetails__Lifecycle_stateAssignment_3");
					put(grammarAccess.getOtherDetailsAccess().getCustodian_namespaceAssignment_9(), "rule__OtherDetails__Custodian_namespaceAssignment_9");
					put(grammarAccess.getOtherDetailsAccess().getCustodian_organizationAssignment_15(), "rule__OtherDetails__Custodian_organizationAssignment_15");
					put(grammarAccess.getOtherDetailsAccess().getLicenseAssignment_21(), "rule__OtherDetails__LicenseAssignment_21");
					put(grammarAccess.getOtherDetailsAccess().getIp_acknowledgement_loincAssignment_27(), "rule__OtherDetails__Ip_acknowledgement_loincAssignment_27");
					put(grammarAccess.getOtherDetailsAccess().getIp_acknowledgement_snomedAssignment_33(), "rule__OtherDetails__Ip_acknowledgement_snomedAssignment_33");
					put(grammarAccess.getOriginalAuthorAccess().getDateAssignment_3(), "rule__OriginalAuthor__DateAssignment_3");
					put(grammarAccess.getOriginalAuthorAccess().getOrganizationAssignment_9(), "rule__OriginalAuthor__OrganizationAssignment_9");
					put(grammarAccess.getOriginalAuthorAccess().getNameAssignment_15(), "rule__OriginalAuthor__NameAssignment_15");
					put(grammarAccess.getOriginalAuthorAccess().getEmailAssignment_21(), "rule__OriginalAuthor__EmailAssignment_21");
					put(grammarAccess.getLangugeAccess().getNameAssignment_3(), "rule__Languge__NameAssignment_3");
					put(grammarAccess.getMatchesAccess().getNameAssignment_0(), "rule__Matches__NameAssignment_0");
					put(grammarAccess.getMatchesAccess().getDefinitionAssignment_1_1(), "rule__Matches__DefinitionAssignment_1_1");
					put(grammarAccess.getMatchesAccess().getSubmatchAssignment_4_0(), "rule__Matches__SubmatchAssignment_4_0");
					put(grammarAccess.getMatchesAccess().getValueAssignment_4_1_0(), "rule__Matches__ValueAssignment_4_1_0");
					put(grammarAccess.getMatchesAccess().getValueDefinitionAssignment_4_1_2(), "rule__Matches__ValueDefinitionAssignment_4_1_2");
					put(grammarAccess.getTerminologyAccess().getTermDefinitionAssignment_4(), "rule__Terminology__TermDefinitionAssignment_4");
					put(grammarAccess.getTerminologyAccess().getTermBindingAssignment_12(), "rule__Terminology__TermBindingAssignment_12");
					put(grammarAccess.getTermDefinitionsAccess().getNameAssignment_1(), "rule__TermDefinitions__NameAssignment_1");
					put(grammarAccess.getTermDefinitionsAccess().getElementsAssignment_7(), "rule__TermDefinitions__ElementsAssignment_7");
					put(grammarAccess.getTermBindingsAccess().getNameAssignment_1(), "rule__TermBindings__NameAssignment_1");
					put(grammarAccess.getTermBindingsAccess().getElementsAssignment_7(), "rule__TermBindings__ElementsAssignment_7");
					put(grammarAccess.getTermDefinitionAccess().getNameAssignment_1(), "rule__TermDefinition__NameAssignment_1");
					put(grammarAccess.getTermDefinitionAccess().getTextAssignment_9(), "rule__TermDefinition__TextAssignment_9");
					put(grammarAccess.getTermDefinitionAccess().getDescriptionAssignment_15(), "rule__TermDefinition__DescriptionAssignment_15");
					put(grammarAccess.getTermBindingAccess().getNameAssignment_1(), "rule__TermBinding__NameAssignment_1");
					put(grammarAccess.getTermBindingAccess().getBindingAssignment_5(), "rule__TermBinding__BindingAssignment_5");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalCIMIDSLParser typedParser = (InternalCIMIDSLParser) parser;
			typedParser.entryRuleArchetypeModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public CIMIDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(CIMIDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
