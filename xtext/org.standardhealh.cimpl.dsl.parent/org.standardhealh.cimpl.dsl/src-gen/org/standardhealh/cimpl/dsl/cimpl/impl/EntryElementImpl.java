/**
 * generated by Xtext 2.10.0
 */
package org.standardhealh.cimpl.dsl.cimpl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.standardhealh.cimpl.dsl.cimpl.CimplPackage;
import org.standardhealh.cimpl.dsl.cimpl.Element;
import org.standardhealh.cimpl.dsl.cimpl.EntryElement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Entry Element</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.standardhealh.cimpl.dsl.cimpl.impl.EntryElementImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.standardhealh.cimpl.dsl.cimpl.impl.EntryElementImpl#getBasedOn <em>Based On</em>}</li>
 *   <li>{@link org.standardhealh.cimpl.dsl.cimpl.impl.EntryElementImpl#getConcept <em>Concept</em>}</li>
 *   <li>{@link org.standardhealh.cimpl.dsl.cimpl.impl.EntryElementImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link org.standardhealh.cimpl.dsl.cimpl.impl.EntryElementImpl#getElements <em>Elements</em>}</li>
 *   <li>{@link org.standardhealh.cimpl.dsl.cimpl.impl.EntryElementImpl#getSubelements <em>Subelements</em>}</li>
 *   <li>{@link org.standardhealh.cimpl.dsl.cimpl.impl.EntryElementImpl#getValue <em>Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EntryElementImpl extends MinimalEObjectImpl.Container implements EntryElement
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getBasedOn() <em>Based On</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBasedOn()
   * @generated
   * @ordered
   */
  protected static final String BASED_ON_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBasedOn() <em>Based On</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBasedOn()
   * @generated
   * @ordered
   */
  protected String basedOn = BASED_ON_EDEFAULT;

  /**
   * The default value of the '{@link #getConcept() <em>Concept</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConcept()
   * @generated
   * @ordered
   */
  protected static final String CONCEPT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getConcept() <em>Concept</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConcept()
   * @generated
   * @ordered
   */
  protected String concept = CONCEPT_EDEFAULT;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The cached value of the '{@link #getElements() <em>Elements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElements()
   * @generated
   * @ordered
   */
  protected EList<Element> elements;

  /**
   * The cached value of the '{@link #getSubelements() <em>Subelements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubelements()
   * @generated
   * @ordered
   */
  protected EList<EntryElement> subelements;

  /**
   * The default value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected static final String VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected String value = VALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EntryElementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CimplPackage.Literals.ENTRY_ELEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CimplPackage.ENTRY_ELEMENT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getBasedOn()
  {
    return basedOn;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBasedOn(String newBasedOn)
  {
    String oldBasedOn = basedOn;
    basedOn = newBasedOn;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CimplPackage.ENTRY_ELEMENT__BASED_ON, oldBasedOn, basedOn));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getConcept()
  {
    return concept;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConcept(String newConcept)
  {
    String oldConcept = concept;
    concept = newConcept;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CimplPackage.ENTRY_ELEMENT__CONCEPT, oldConcept, concept));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CimplPackage.ENTRY_ELEMENT__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Element> getElements()
  {
    if (elements == null)
    {
      elements = new EObjectContainmentEList<Element>(Element.class, this, CimplPackage.ENTRY_ELEMENT__ELEMENTS);
    }
    return elements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<EntryElement> getSubelements()
  {
    if (subelements == null)
    {
      subelements = new EObjectContainmentEList<EntryElement>(EntryElement.class, this, CimplPackage.ENTRY_ELEMENT__SUBELEMENTS);
    }
    return subelements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValue(String newValue)
  {
    String oldValue = value;
    value = newValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CimplPackage.ENTRY_ELEMENT__VALUE, oldValue, value));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CimplPackage.ENTRY_ELEMENT__ELEMENTS:
        return ((InternalEList<?>)getElements()).basicRemove(otherEnd, msgs);
      case CimplPackage.ENTRY_ELEMENT__SUBELEMENTS:
        return ((InternalEList<?>)getSubelements()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CimplPackage.ENTRY_ELEMENT__NAME:
        return getName();
      case CimplPackage.ENTRY_ELEMENT__BASED_ON:
        return getBasedOn();
      case CimplPackage.ENTRY_ELEMENT__CONCEPT:
        return getConcept();
      case CimplPackage.ENTRY_ELEMENT__DESCRIPTION:
        return getDescription();
      case CimplPackage.ENTRY_ELEMENT__ELEMENTS:
        return getElements();
      case CimplPackage.ENTRY_ELEMENT__SUBELEMENTS:
        return getSubelements();
      case CimplPackage.ENTRY_ELEMENT__VALUE:
        return getValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CimplPackage.ENTRY_ELEMENT__NAME:
        setName((String)newValue);
        return;
      case CimplPackage.ENTRY_ELEMENT__BASED_ON:
        setBasedOn((String)newValue);
        return;
      case CimplPackage.ENTRY_ELEMENT__CONCEPT:
        setConcept((String)newValue);
        return;
      case CimplPackage.ENTRY_ELEMENT__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case CimplPackage.ENTRY_ELEMENT__ELEMENTS:
        getElements().clear();
        getElements().addAll((Collection<? extends Element>)newValue);
        return;
      case CimplPackage.ENTRY_ELEMENT__SUBELEMENTS:
        getSubelements().clear();
        getSubelements().addAll((Collection<? extends EntryElement>)newValue);
        return;
      case CimplPackage.ENTRY_ELEMENT__VALUE:
        setValue((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CimplPackage.ENTRY_ELEMENT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case CimplPackage.ENTRY_ELEMENT__BASED_ON:
        setBasedOn(BASED_ON_EDEFAULT);
        return;
      case CimplPackage.ENTRY_ELEMENT__CONCEPT:
        setConcept(CONCEPT_EDEFAULT);
        return;
      case CimplPackage.ENTRY_ELEMENT__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case CimplPackage.ENTRY_ELEMENT__ELEMENTS:
        getElements().clear();
        return;
      case CimplPackage.ENTRY_ELEMENT__SUBELEMENTS:
        getSubelements().clear();
        return;
      case CimplPackage.ENTRY_ELEMENT__VALUE:
        setValue(VALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CimplPackage.ENTRY_ELEMENT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case CimplPackage.ENTRY_ELEMENT__BASED_ON:
        return BASED_ON_EDEFAULT == null ? basedOn != null : !BASED_ON_EDEFAULT.equals(basedOn);
      case CimplPackage.ENTRY_ELEMENT__CONCEPT:
        return CONCEPT_EDEFAULT == null ? concept != null : !CONCEPT_EDEFAULT.equals(concept);
      case CimplPackage.ENTRY_ELEMENT__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case CimplPackage.ENTRY_ELEMENT__ELEMENTS:
        return elements != null && !elements.isEmpty();
      case CimplPackage.ENTRY_ELEMENT__SUBELEMENTS:
        return subelements != null && !subelements.isEmpty();
      case CimplPackage.ENTRY_ELEMENT__VALUE:
        return VALUE_EDEFAULT == null ? value != null : !VALUE_EDEFAULT.equals(value);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", basedOn: ");
    result.append(basedOn);
    result.append(", concept: ");
    result.append(concept);
    result.append(", description: ");
    result.append(description);
    result.append(", value: ");
    result.append(value);
    result.append(')');
    return result.toString();
  }

} //EntryElementImpl
