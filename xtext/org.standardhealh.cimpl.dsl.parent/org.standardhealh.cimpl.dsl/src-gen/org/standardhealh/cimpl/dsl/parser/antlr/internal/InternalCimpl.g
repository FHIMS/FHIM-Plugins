/*
 * generated by Xtext 2.10.0
 */
grammar InternalCimpl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.standardhealh.cimpl.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.standardhealh.cimpl.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.standardhealh.cimpl.dsl.services.CimplGrammarAccess;

}

@parser::members {

 	private CimplGrammarAccess grammarAccess;

    public InternalCimplParser(TokenStream input, CimplGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected CimplGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getElementsDocParserRuleCall_0());
			}
			lv_elements_0_0=ruleDoc
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				set(
					$current,
					"elements",
					lv_elements_0_0,
					"org.standardhealh.cimpl.dsl.Cimpl.Doc");
				afterParserOrEnumRuleCall();
			}
		)
	)?
;

// Entry rule entryRuleDoc
entryRuleDoc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDocRule()); }
	iv_ruleDoc=ruleDoc
	{ $current=$iv_ruleDoc.current; }
	EOF;

// Rule Doc
ruleDoc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDocAccess().getHeaderDocHeaderParserRuleCall_0_0());
				}
				lv_header_0_0=ruleDocHeader
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDocRule());
					}
					set(
						$current,
						"header",
						lv_header_0_0,
						"org.standardhealh.cimpl.dsl.Cimpl.DocHeader");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDocAccess().getUsesUsesStatementParserRuleCall_1_0());
				}
				lv_uses_1_0=ruleUsesStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDocRule());
					}
					set(
						$current,
						"uses",
						lv_uses_1_0,
						"org.standardhealh.cimpl.dsl.Cimpl.UsesStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDocAccess().getEntriesEntryElementParserRuleCall_2_0());
				}
				lv_entries_2_0=ruleEntryElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDocRule());
					}
					add(
						$current,
						"entries",
						lv_entries_2_0,
						"org.standardhealh.cimpl.dsl.Cimpl.EntryElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleDocHeader
entryRuleDocHeader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDocHeaderRule()); }
	iv_ruleDocHeader=ruleDocHeader
	{ $current=$iv_ruleDocHeader.current; }
	EOF;

// Rule DocHeader
ruleDocHeader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Grammar:'
		{
			newLeafNode(otherlv_0, grammarAccess.getDocHeaderAccess().getGrammarKeyword_0());
		}
		otherlv_1='DataElement'
		{
			newLeafNode(otherlv_1, grammarAccess.getDocHeaderAccess().getDataElementKeyword_1());
		}
		(
			(
				lv_version_2_0=RULE_STRING
				{
					newLeafNode(lv_version_2_0, grammarAccess.getDocHeaderAccess().getVersionSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDocHeaderRule());
					}
					setWithLastConsumed(
						$current,
						"version",
						lv_version_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='\r\n'
		{
			newLeafNode(otherlv_3, grammarAccess.getDocHeaderAccess().getControl000dControl000aKeyword_3());
		}
		otherlv_4='Namespace:'
		{
			newLeafNode(otherlv_4, grammarAccess.getDocHeaderAccess().getNamespaceKeyword_4());
		}
		(
			(
				lv_namespace_5_0=RULE_STRING
				{
					newLeafNode(lv_namespace_5_0, grammarAccess.getDocHeaderAccess().getNamespaceSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDocHeaderRule());
					}
					setWithLastConsumed(
						$current,
						"namespace",
						lv_namespace_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6='\r'
		{
			newLeafNode(otherlv_6, grammarAccess.getDocHeaderAccess().getControl000dKeyword_6());
		}
		otherlv_7='\r'
		{
			newLeafNode(otherlv_7, grammarAccess.getDocHeaderAccess().getControl000dKeyword_7());
		}
	)
;

// Entry rule entryRuleUsesStatement
entryRuleUsesStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUsesStatementRule()); }
	iv_ruleUsesStatement=ruleUsesStatement
	{ $current=$iv_ruleUsesStatement.current; }
	EOF;

// Rule UsesStatement
ruleUsesStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Uses:'
		{
			newLeafNode(otherlv_0, grammarAccess.getUsesStatementAccess().getUsesKeyword_0());
		}
		(
			(
				lv_namespace_1_0=RULE_STRING
				{
					newLeafNode(lv_namespace_1_0, grammarAccess.getUsesStatementAccess().getNamespaceSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUsesStatementRule());
					}
					addWithLastConsumed(
						$current,
						"namespace",
						lv_namespace_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getUsesStatementAccess().getCommaKeyword_2_0());
			}
			(
				(
					lv_namespace_3_0=RULE_STRING
					{
						newLeafNode(lv_namespace_3_0, grammarAccess.getUsesStatementAccess().getNamespaceSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUsesStatementRule());
						}
						addWithLastConsumed(
							$current,
							"namespace",
							lv_namespace_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)*
		otherlv_4='\r'
		{
			newLeafNode(otherlv_4, grammarAccess.getUsesStatementAccess().getControl000dKeyword_3());
		}
		otherlv_5='\r'
		{
			newLeafNode(otherlv_5, grammarAccess.getUsesStatementAccess().getControl000dKeyword_4());
		}
	)
;

// Entry rule entryRuleEntryElement
entryRuleEntryElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntryElementRule()); }
	iv_ruleEntryElement=ruleEntryElement
	{ $current=$iv_ruleEntryElement.current; }
	EOF;

// Rule EntryElement
ruleEntryElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EntryElement'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntryElementAccess().getEntryElementKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEntryElementAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntryElementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='\r\n'
		{
			newLeafNode(otherlv_2, grammarAccess.getEntryElementAccess().getControl000dControl000aKeyword_2());
		}
		otherlv_3='Based On:'
		{
			newLeafNode(otherlv_3, grammarAccess.getEntryElementAccess().getBasedOnKeyword_3());
		}
		(
			(
				lv_basedOn_4_0=RULE_STRING
				{
					newLeafNode(lv_basedOn_4_0, grammarAccess.getEntryElementAccess().getBasedOnSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntryElementRule());
					}
					setWithLastConsumed(
						$current,
						"basedOn",
						lv_basedOn_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='\r\n'
		{
			newLeafNode(otherlv_5, grammarAccess.getEntryElementAccess().getControl000dControl000aKeyword_5());
		}
		otherlv_6='Concept:'
		{
			newLeafNode(otherlv_6, grammarAccess.getEntryElementAccess().getConceptKeyword_6());
		}
		(
			(
				lv_concept_7_0=RULE_STRING
				{
					newLeafNode(lv_concept_7_0, grammarAccess.getEntryElementAccess().getConceptSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntryElementRule());
					}
					setWithLastConsumed(
						$current,
						"concept",
						lv_concept_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8='\r\n'
		{
			newLeafNode(otherlv_8, grammarAccess.getEntryElementAccess().getControl000dControl000aKeyword_8());
		}
		otherlv_9='Description:'
		{
			newLeafNode(otherlv_9, grammarAccess.getEntryElementAccess().getDescriptionKeyword_9());
		}
		(
			(
				lv_description_10_0=RULE_STRING
				{
					newLeafNode(lv_description_10_0, grammarAccess.getEntryElementAccess().getDescriptionSTRINGTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntryElementRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_10_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_11='\r\n'
		{
			newLeafNode(otherlv_11, grammarAccess.getEntryElementAccess().getControl000dControl000aKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntryElementAccess().getElementsElementParserRuleCall_12_0());
				}
				lv_elements_12_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntryElementRule());
					}
					add(
						$current,
						"elements",
						lv_elements_12_0,
						"org.standardhealh.cimpl.dsl.Cimpl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_13='\r\n'
			{
				newLeafNode(otherlv_13, grammarAccess.getEntryElementAccess().getControl000dControl000aKeyword_13_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntryElementAccess().getElementsElementParserRuleCall_13_1_0());
					}
					lv_elements_14_0=ruleElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntryElementRule());
						}
						add(
							$current,
							"elements",
							lv_elements_14_0,
							"org.standardhealh.cimpl.dsl.Cimpl.Element");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_15='\r\n'
		{
			newLeafNode(otherlv_15, grammarAccess.getEntryElementAccess().getControl000dControl000aKeyword_14());
		}
		(
			otherlv_16='\t'
			{
				newLeafNode(otherlv_16, grammarAccess.getEntryElementAccess().getControl0009Keyword_15_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntryElementAccess().getSubelementsEntryElementParserRuleCall_15_1_0());
					}
					lv_subelements_17_0=ruleEntryElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntryElementRule());
						}
						add(
							$current,
							"subelements",
							lv_subelements_17_0,
							"org.standardhealh.cimpl.dsl.Cimpl.EntryElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_18='Value:'
		{
			newLeafNode(otherlv_18, grammarAccess.getEntryElementAccess().getValueKeyword_16());
		}
		(
			(
				lv_value_19_0=RULE_STRING
				{
					newLeafNode(lv_value_19_0, grammarAccess.getEntryElementAccess().getValueSTRINGTerminalRuleCall_17_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntryElementRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_19_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		otherlv_20='\r\n'
		{
			newLeafNode(otherlv_20, grammarAccess.getEntryElementAccess().getControl000dControl000aKeyword_18());
		}
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_lower_0_0=RULE_INT
				{
					newLeafNode(lv_lower_0_0, grammarAccess.getElementAccess().getLowerINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementRule());
					}
					setWithLastConsumed(
						$current,
						"lower",
						lv_lower_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_1='..'
		{
			newLeafNode(otherlv_1, grammarAccess.getElementAccess().getFullStopFullStopKeyword_1());
		}
		(
			(
				lv_upper_2_0=RULE_INT
				{
					newLeafNode(lv_upper_2_0, grammarAccess.getElementAccess().getUpperINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementRule());
					}
					setWithLastConsumed(
						$current,
						"upper",
						lv_upper_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				lv_name_3_0=RULE_STRING
				{
					newLeafNode(lv_name_3_0, grammarAccess.getElementAccess().getNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
