/**
 * generated by Xtext 2.10.0
 */
package org.standardhealh.cimpl.dsl.cimpl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.standardhealh.cimpl.dsl.cimpl.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class CimplFactoryImpl extends EFactoryImpl implements CimplFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static CimplFactory init()
  {
    try
    {
      CimplFactory theCimplFactory = (CimplFactory)EPackage.Registry.INSTANCE.getEFactory(CimplPackage.eNS_URI);
      if (theCimplFactory != null)
      {
        return theCimplFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new CimplFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CimplFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case CimplPackage.MODEL: return createModel();
      case CimplPackage.DOC: return createDoc();
      case CimplPackage.DOC_HEADER: return createDocHeader();
      case CimplPackage.USES_STATEMENT: return createUsesStatement();
      case CimplPackage.ENTRY_ELEMENT: return createEntryElement();
      case CimplPackage.ELEMENT: return createElement();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Doc createDoc()
  {
    DocImpl doc = new DocImpl();
    return doc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DocHeader createDocHeader()
  {
    DocHeaderImpl docHeader = new DocHeaderImpl();
    return docHeader;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UsesStatement createUsesStatement()
  {
    UsesStatementImpl usesStatement = new UsesStatementImpl();
    return usesStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EntryElement createEntryElement()
  {
    EntryElementImpl entryElement = new EntryElementImpl();
    return entryElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Element createElement()
  {
    ElementImpl element = new ElementImpl();
    return element;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CimplPackage getCimplPackage()
  {
    return (CimplPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static CimplPackage getPackage()
  {
    return CimplPackage.eINSTANCE;
  }

} //CimplFactoryImpl
